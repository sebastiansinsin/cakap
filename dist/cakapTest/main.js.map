{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared.service.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'cakapTest';\n}\n","\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SharedService } from './shared.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [\r\n    SharedService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport interface User {\n    login: string;\n    id: string;\n    avatar_url: string;\n    repos_url: string;\n    name: string;\n    company: string;\n    blog: string;\n    location: string;\n    email: string;\n    hireable: boolean;\n    bio: string;\n    twitter_username: string;\n    public_repos: number;\n    followers: number;\n    following: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharedService {\n    baseUrl = 'https://api.github.com/';\n    header: HttpHeaders = new HttpHeaders();\n    private userData = new BehaviorSubject<User>({\n        login: '',\n        id: '',\n        avatar_url: '',\n        repos_url: '',\n        name: '',\n        company: '',\n        blog : '',\n        location: '',\n        email: '',\n        hireable : false,\n        bio : '',\n        twitter_username: '',\n        public_repos: 0,\n        followers: 0,\n        following: 0\n    });\n    public userData$ = this.userData.asObservable().pipe(distinctUntilChanged());\n    constructor(private http: HttpClient) {\n        this.header.append('Accept', 'application/vnd.github.v3+json');\n    }\n    public findUser(name: string): Observable<User> {\n        const url = this.baseUrl + 'users/' + name;\n        return this.http.get<User>(url, { headers: this.header }).pipe(\n            map((res: User) => {\n                return Object.assign({}, {\n                    login: res.login,\n                    id: res.id,\n                    avatar_url: res.avatar_url,\n                    repos_url: res.repos_url,\n                    name: res.name,\n                    company: res.company,\n                    blog: res.blog,\n                    location: res.location,\n                    email: res.email,\n                    hireable: res.hireable,\n                    bio: res.bio,\n                    twitter_username: res.twitter_username,\n                    public_repos: res.public_repos,\n                    followers: res.following,\n                    following: res.followers\n                });\n            })\n        );\n    }\n\n    public getRepos(reposUrl: string): Observable<any> {\n        return this.http.get<any>(reposUrl, {headers: this.header});\n    }\n\n    public setUserData(userData: User): void {\n        this.userData.next(userData);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.sass']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  back(): void {\n    this.router.navigateByUrl('/find-users');\n  }\n}\n","<div class=\"container\">\n    <div class=\"message\">User Not Found</div>\n    <div class=\"back-button\">\n        <button data-cy=\"back-btn\" mat-button-raised color=\"primary\" (click)=\"back()\">back</button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path: 'find-users',\n    loadChildren: () => import('./find-users/find-users.module').then(m => m.FindUsersModule)\n  },\n  {\n    path: 'user-repositories',\n    loadChildren: () => import('./user-repositories/user-repositories.module').then(m => m.UserRepositoriesModule)\n  },\n  {\n    path: 'user-profile',\n    loadChildren: () => import('./user-profile/user-profile.module').then(m => m.UserProfileModule)\n  },\n  {\n    path: '',\n    redirectTo: 'find-users',\n    pathMatch: 'full'\n  },\n  {\n    path: 'not-found',\n    component: PageNotFoundComponent\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}